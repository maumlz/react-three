{"version":3,"sources":["assets/PU_Logo.png","components/canvas/assets/rock/rock01.jpg","components/canvas/assets/skybox_test/main_skybox/main_skybox_RT.png","components/canvas/assets/skybox_test/main_skybox/main_skybox_UP.png","components/canvas/assets/skybox_test/main_skybox/main_skybox_LF.png","components/canvas/assets/skybox_test/main_skybox/main_skybox_DN.png","components/canvas/assets/skybox_test/main_skybox/main_skybox_FT.png","components/canvas/assets/skybox_test/main_skybox/main_skybox_BK.png","components/footer/Footer.js","components/header/Header.js","components/canvas/objects/others/stars.js","components/canvas/objects/others/sphere.js","components/canvas/objects/tests/hudTest.js","components/canvas/SceneManager.js","components/canvas/main.js","scenes/home/Home.js","index.js"],"names":["module","exports","Footer","className","Header","Stars","count","scene","positions","i","r","theta","Math","PI","random","phi","acos","x","cos","sin","y","z","push","pos","Float32Array","geometry","THREE","attributes","setAttribute","material","size","sizeAttenuation","color","points","add","Sphere","origen","load","rock","texture","map","sphere","position","set","undefined","err","console","error","HudTest","camera","shape","moveTo","lineTo","hole1","bezierCurveTo","holes","arc","wireframe","mesh","SceneManager","canvas","xElem","document","querySelector","yElem","zElem","fpsElem","clock","screenDimensions","width","height","stats","Stats","appendChild","dom","loadingManager","posx","negx","posy","negy","posz","negz","background","buildScene","renderer","alpha","antialias","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","parentElement","domElement","buildRender","aspectRatio","ratio","focus","buildCamera","controls","OrbitControls","target","createControls","loadingScreen","loader","RECURSOSDESCARGADOS","onProgress","item","loaded","total","log","onLoad","PU","meshSplash","lookAt","keyCode","light","addEventListener","event","which","update","delta","getDelta","textContent","toFixed","render","onWindowResize","aspect","updateProjectionMatrix","ThreeContainer","containerElement","createElement","createCanvas","offsetWidth","offsetHeight","sceneManager","resizeCanvas","style","onresize","time","requestAnimationFrame","begin","threeEntryPoint","this","threeRootElement","id","ref","element","Component","Home","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c762388d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PU_Logo.eea66148.png\";","module.exports = __webpack_public_path__ + \"static/media/rock01.a432b48c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main_skybox_RT.c079b860.png\";","module.exports = __webpack_public_path__ + \"static/media/main_skybox_UP.fb8102d0.png\";","module.exports = __webpack_public_path__ + \"static/media/main_skybox_LF.14e039c3.png\";","module.exports = __webpack_public_path__ + \"static/media/main_skybox_DN.ab69eb75.png\";","module.exports = __webpack_public_path__ + \"static/media/main_skybox_FT.1188a9e7.png\";","module.exports = __webpack_public_path__ + \"static/media/main_skybox_BK.5c3c207e.png\";","import React from 'react'\r\nimport './footer.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            Footer\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './header.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            Header\r\n        </div>\r\n    )\r\n}\r\n","import * as THREE from 'three';\r\n\r\nexport default function Stars(count,scene) {\r\n\r\n  const positions = [];\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const r = 40000\r\n    const theta = 2 * Math.PI * Math.random()\r\n    const phi = Math.acos(2 * Math.random() - 1)\r\n    const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\r\n    const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\r\n    const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)\r\n    positions.push(x)\r\n    positions.push(y)\r\n    positions.push(z)\r\n  }\r\n\r\n  const pos = new Float32Array(positions)\r\n\r\n  const geometry = new THREE.BufferGeometry();\r\n  const attributes = new THREE.BufferAttribute(pos, 3);\r\n  geometry.setAttribute(\"position\",attributes);\r\n  const material = new THREE.PointsMaterial({size: 15, sizeAttenuation: true, color:\"white\"})\r\n  const points = new THREE.Points(geometry, material)\r\n  scene.add(points);\r\n}\r\n","import * as THREE from 'three';\r\nimport rock from '../../assets/rock/rock01.jpg'\r\n\r\n\r\nexport default function Sphere(scene, origen){\r\n  //SPHERE\r\n  const geometry = new THREE.SphereBufferGeometry(5, 16, 16);\r\n  const loader = new THREE.TextureLoader();\r\n\r\n  const texture = loader.load(\r\n    // resource URL\r\n    rock,\r\n\r\n    // onLoad callback\r\n    function ( texture ) {\r\n      // in this example we create the material when the texture is loaded\r\n      const material = new THREE.MeshBasicMaterial( {\r\n        map: texture\r\n      } );\r\n      const sphere = new THREE.Mesh( geometry, material );\r\n      sphere.position.set(origen.x,origen.y,origen.z)\r\n      scene.add( sphere );\r\n    },\r\n\r\n    // onProgress callback currently not supported\r\n    undefined,\r\n\r\n    // onError callback\r\n    function ( err ) {\r\n      console.error( 'An error happened.' );\r\n    }\r\n  );\r\n\r\n  // const material = new THREE.MeshBasicMaterial( {color: 'red', wireframe: false} );\r\n  // const material = new THREE.MeshBasicMaterial( {map: texture} );\r\n\r\n\r\n}\r\n","import * as THREE from 'three';\r\n\r\n\r\nexport default function HudTest(scene,camera){\r\n\r\n  const shape = new THREE.Shape();\r\n\r\n  shape.moveTo(-1.5, .5);\r\n  shape.lineTo(1.5, .5);\r\n  shape.lineTo(1.5, -.5);\r\n  shape.lineTo(-1.5,-.5)\r\n\r\n\r\n  //Holes\r\n  var hole1 = new THREE.Path();\r\n  hole1.moveTo(0,0.2)\r\n  hole1.bezierCurveTo(-0.2, 0.6, -0.84, 0.5, -0.85, 0)\r\n  hole1.bezierCurveTo(-0.84, -0.5,-0.2, -0.6, 0, -0.2)\r\n  hole1.bezierCurveTo(0.2, -0.6, 0.84, -0.5, 0.85, 0)\r\n  hole1.bezierCurveTo(0.84, 0.5, 0.2, 0.6, 0, 0.2)\r\n\r\n  shape.holes.push(hole1);\r\n\r\n  var hole2 = new THREE.Path();\r\n  hole2.arc(.45,0,.45,Math.PI*1.05,Math.PI*2.95)\r\n\r\n  const material = new THREE.MeshBasicMaterial({color: 'gray', wireframe: false})\r\n  const geometry = new THREE.ShapeGeometry( shape );\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.position.z=camera.position.z-1\r\n  scene.add(mesh)\r\n\r\n\r\n}\r\n","import * as THREE from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nimport Stats from 'three/examples/jsm/libs/stats.module'\r\nimport PU from '../../assets/PU_Logo.png';\r\n\r\n// OTROS\r\nimport Stars from './objects/others/stars.js'\r\nimport Sphere from './objects/others/sphere.js'\r\n// HUD\r\nimport HudTest from './objects/tests/hudTest.js'\r\n\r\n// Ken's\r\nimport posx from './assets/skybox_test/main_skybox/main_skybox_RT.png'\r\nimport posy from './assets/skybox_test/main_skybox/main_skybox_UP.png'\r\nimport negx from './assets/skybox_test/main_skybox/main_skybox_LF.png'\r\nimport negy from './assets/skybox_test/main_skybox/main_skybox_DN.png'\r\nimport posz from './assets/skybox_test/main_skybox/main_skybox_FT.png'\r\nimport negz from './assets/skybox_test/main_skybox/main_skybox_BK.png'\r\n\r\nimport { render } from '@testing-library/react';\r\n\r\n// stars\r\n// import Star1 from './objects/stars/star1.js'\r\n\r\nexport default function SceneManager (canvas)  {\r\n\r\n  const xElem = document.querySelector('#x');\r\n  const yElem = document.querySelector('#y');\r\n  const zElem = document.querySelector('#z');\r\n  const fpsElem = document.querySelector('#fps');\r\n  // const inout = document.querySelector('#io');\r\n\r\n  // let io = [5];\r\n\r\n  const clock = new THREE.Clock();\r\n  const screenDimensions = {\r\n    width: canvas.width,\r\n    height: canvas.height\r\n  }\r\n  let stats = Stats();\r\n  fpsElem.appendChild(stats.dom)\r\n\r\n  const ratio = 1000;\r\n\r\n  let loadingManager = new THREE.LoadingManager();\r\n\r\n  const scene = buildScene(loadingManager);\r\n  const renderer = buildRender(screenDimensions,canvas);\r\n  const camera = buildCamera(screenDimensions);\r\n  // let back = scene.background;\r\n  const sceneSubjects = createSceneSubjects(screenDimensions,canvas);\r\n  const controls = createControls();\r\n\r\n  let loadingScreen = {\r\n    scene: new THREE.Scene(),\r\n    camera: new THREE.PerspectiveCamera(75, screenDimensions.width/screenDimensions.height, 0.1, 1000),\r\n    loader: new THREE.TextureLoader(loadingManager),\r\n    geometry: new THREE.PlaneGeometry(9, 10*.75)\r\n  }\r\n\r\n  //let LOADINGMANAGER = null;\r\n  let RECURSOSDESCARGADOS = false;\r\n\r\n  loadingManager.onProgress= function(item,loaded,total){\r\n    console.log(item,loaded,total);\r\n  }\r\n\r\n  loadingManager.onLoad = function(){\r\n    console.log('loaded all resources');\r\n    RECURSOSDESCARGADOS = true;\r\n  }\r\n\r\n  loadingScreen.camera.position.z = 5;\r\n  let material = new THREE.MeshBasicMaterial({\r\n    map: loadingScreen.loader.load(PU)\r\n  });\r\n  let meshSplash = new THREE.Mesh(loadingScreen.geometry,material);\r\n\r\n  meshSplash.position.set(0,0,0);\r\n  loadingScreen.camera.lookAt(meshSplash.position);\r\n  loadingScreen.scene.add(meshSplash);\r\n\r\n  let light = new THREE.PointLight( 0xffffff, 1, 0 );\r\n  light.position.set(1, 1, 100 );\r\n  loadingScreen.scene.add(light);\r\n\r\n\r\n  document.addEventListener(\"keydown\", onDocumentKeyDown, false);\r\n  let keyCode;\r\n  function onDocumentKeyDown(event) {\r\n    keyCode = event.which;\r\n    console.log(\"hola\");\r\n    if(keyCode == 71){\r\n      // Place camera on x axis\r\n      controls.target.set(0,0,-55000);\r\n      camera.position.set(0,0,-54000)\r\n    }else{\r\n      controls.target.set(0,0,0);\r\n      camera.position.set(0,0,3500)\r\n    }\r\n  }\r\n\r\n  function buildScene(loadingManager) {// Construye la escena, color de fondo\r\n    const scene = new THREE.Scene();\r\n    // scene.background = new THREE.Color(0,0,.1);\r\n    // scene.fog = new THREE.FogExp2(0x03544e, 0.0001);\r\n    const loader = new THREE.CubeTextureLoader(loadingManager)\r\n    const texture = loader.load([\r\n      posx,negx,posy,negy,posz,negz\r\n    ])\r\n    scene.background = texture;\r\n    return scene;\r\n  }\r\n\r\n  function buildRender({ width, height },canvas) {// Llama y ajusta al renderer\r\n    const renderer = new THREE.WebGLRenderer({canvas,alpha: false, antialias:true});\r\n    renderer.setClearColor(0x0000000);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(width,height);\r\n    canvas.parentElement.appendChild(renderer.domElement)\r\n    return renderer;\r\n  }\r\n\r\n  function buildCamera({ width, height }) {// Llama y ajusta la cámara\r\n    const fieldOfView = 50;\r\n    const aspectRatio = width/height;\r\n    const nearPlane = 0.1;\r\n    const farPlane = ratio*45;\r\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\r\n    scene.add( camera );\r\n    camera.position.z = 3500;\r\n    camera.focus = 1000;\r\n    // var helper = new THREE.CameraHelper( camera );\r\n    return camera;\r\n  }\r\n\r\n  function createSceneSubjects(screenDimensions,canvas) {// Aqui se agregan los diferentes objetos del canvas\r\n    const sceneSubjects = [\r\n      new Stars(2000,scene),\r\n      new HudTest(scene,camera),\r\n      new Sphere(scene, new THREE.Vector3(0,0,0))\r\n    ];\r\n\r\n    return sceneSubjects;\r\n  }\r\n\r\n  function MouseArriba(){\r\n    console.log(\"Estamos encima de una nebulosa\");\r\n  }\r\n\r\n  function createControls(){\r\n    //Orbit Controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.target.set(0, 0, 0);\r\n    // controls.maxDistance = camera.position.z*1;\r\n\r\n    //Add\r\n    return controls;\r\n  }\r\n\r\n  function update(){\r\n\r\n    if(RECURSOSDESCARGADOS == false){\r\n      //requestAnimationFrame(update);\r\n      renderer.render(loadingScreen.scene,loadingScreen.camera);\r\n      return;\r\n    }else{\r\n\r\n\r\n      var delta = clock.getDelta();\r\n      controls.update( delta );\r\n\r\n      xElem.textContent = camera.position.x.toFixed(3);\r\n      yElem.textContent = camera.position.y.toFixed(3);\r\n      zElem.textContent = camera.position.z.toFixed(3);\r\n\r\n      stats.update();\r\n      renderer.render(scene, camera);\r\n    }\r\n  }\r\n\r\n  function onWindowResize() {\r\n    const { width, height } = canvas;\r\n\r\n    screenDimensions.width = width;\r\n    screenDimensions.height = height;\r\n\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(width, height);\r\n  }\r\n\r\n  function onMouseDown(e) {\r\n    var vectorMouse = new THREE.Vector3(-(window.innerWidth/2-e.clientX)*2/window.innerWidth, (window.innerHeight/2-e.clientY)*2/window.innerHeight, -1/Math.tan(22.5*Math.PI/180)); //22.5 is half of camera frustum angle 45 degree\r\n    vectorMouse.applyQuaternion(camera.quaternion);\r\n    vectorMouse.normalize();\r\n    var vectorObject = new THREE.Vector3(); //vector from camera to object\r\n    // vectorObject.set(sceneSubjects[6].x - camera.position.x, sceneSubjects[6].y - camera.position.y, sceneSubjects[6].z - camera.position.z);\r\n    vectorObject.normalize();\r\n    if (vectorMouse.angleTo(vectorObject)*180/Math.PI < 1) {\r\n      //mouse's position is near object's position\r\n    }\r\n  }\r\n\r\n  return {\r\n    update,\r\n    onWindowResize,\r\n    stats\r\n  }\r\n}\r\n","import SceneManager from './SceneManager';\r\n\r\nexport default (containerElement) => {\r\n\r\n  const canvas = createCanvas(document, containerElement);\r\n  canvas.width = canvas.offsetWidth;\r\n  canvas.height = canvas.offsetHeight;\r\n  const sceneManager = new SceneManager(canvas);\r\n\r\n  bindEventListeners();\r\n  render();\r\n\r\n  function createCanvas(document, containerElement) {\r\n    const canvas = document.createElement('canvas');\r\n    // canvas.parentElement.setAttribute(\"id\",\"canvas\")\r\n    containerElement.appendChild(canvas);\r\n    return canvas;\r\n  }\r\n\r\n  function bindEventListeners() {\r\n    window.onresize = resizeCanvas;\r\n    resizeCanvas();\r\n  }\r\n\r\n  function resizeCanvas() {\r\n    canvas.style.width = '100%';\r\n    canvas.style.height= '100%';\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n    sceneManager.onWindowResize();\r\n  }\r\n\r\n  function render(time) {\r\n    requestAnimationFrame(render);\r\n    sceneManager.stats.begin()\r\n    sceneManager.update();\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport { Footer } from '../../components/footer/Footer'\r\nimport { Header } from '../../components/header/Header'\r\nimport '../../index.css'\r\nimport threeEntryPoint from '../../components/canvas/main';\r\n// import Hud from '../../components/canvas/hud'\r\n\r\nclass ThreeContainer extends Component {\r\n  componentDidMount() {\r\n    threeEntryPoint(this.threeRootElement);\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n      <div id=\"canvas\"><div id=\"map\" ref={element => this.threeRootElement = element} /> </div>\r\n      <div id=\"debug\">\r\n        <div>x:<span id=\"x\"></span></div>\r\n        <div>y:<span id=\"y\"></span></div>\r\n        <div>z:<span id=\"z\"></span></div>\r\n        <div>fps:<span id=\"fps\"></span></div>\r\n        <div>i/o:<span id=\"io\"></span></div>\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n}\r\n\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <Header/>\r\n      <ThreeContainer/>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Home} from './scenes/home/Home'\r\n//import {SplashScreen} from './components/SplashScreen/SplashScreen'\r\n\r\nReactDOM.render(\r\n    <Home />,\r\n  document.getElementById('root')\r\n);\r\n\r\n    // <SplashScreen/>,\r\n"],"sourceRoot":""}